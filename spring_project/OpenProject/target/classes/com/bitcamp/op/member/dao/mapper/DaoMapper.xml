<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.bitcamp.op.member.dao.Dao">
<!-- 인터페이스의 full name을 namespace로 설정 필수! -->

	
	<!-- Select의 결과를 매핑하는 설정 -->
	<resultMap id = "memberListResult"
			   type = "com.bitcamp.op.member.domain.Member">
		<id column = "index" property = "index"/>
		<result column = "userID" property = "userID"/>
		<result column = "userName" property = "userName"/>
		<result column = "userPW" property = "userPW"/>
		<result column = "userPhoto" property = "userPhoto"/>
		<result column = "regDate" property = "regDate"/>
	</resultMap>


	<!-- sql tag 식별은 인터페이스의 메소드 이름과 일치시킨다. -->
	<!-- 로그인을 위한 select -->
	<select id = "selectByIdPw"
			parameterType = "com.bitcamp.op.member.domain.SearchIdPw"
			resultType = "com.bitcamp.op.member.domain.Member">
		select * from memberinfo where userID = #{param1} and userPW = #{param2}
	</select>


	<!-- 아이디 중복체크 -->
	<select id = "selectByID" resultType = "int">
		select count(*) from memberinfo where userID = #{uid}
	</select>


	<!-- 회원정보 등록 -->
	<insert id = "insertMember"
			parameterType = "com.bitcamp.op.member.domain.Member"
			useGeneratedKeys = "true"
			keyProperty = "index">
			insert into Memberinfo (userID, userPW, userName, userPhoto)
			values (#{userID}, #{userPW}, #{userName}, #{userPhoto})
	</insert>


	<!-- 회원정보 수정 -->
	<update id = "updateMember"
			parameterType = "com.bitcamp.op.member.domain.Member">
			update memberinfo 
			set userName = #{userName}, userPW = #{userPW}
			where index = #{index}
	</update>
	
	
	<!-- 회원정보 삭제(회원 탈퇴) -->
	<delete id ="deleteMember">
		delete from memberinfo where index = #{index}
	</delete>
	
	
	<!-- 전체 회원의 리스트 -->
	<select id = "selectAll"
			resultType = "com.bitcamp.op.member.domain.Member">
		select * from memberinfo order by userID
	</select>
	
	
	<!-- 페이징 처리가 가능한 회원 리스트 -->
	<select id = "selectList"
			resultType = "com.bitcamp.op.member.domain.Member">
		select * from memberinfo order by userID limit #{param1}, #{param2}
	</select>
	
	
	<!-- 전체 회원의 수 -->
	<select id = "selectTotalCount"
			resultType = "int">
		select count (*) from memberinfo
	</select>
	
	
	<!-- 검색을 통한 회원 리스트 출력 -->
	<select id = "selectMember"
			parameterType = "com.bitcamp.op.member.domain.SearchType"
			resultType = "com.bitcamp.op.member.domain.Member">
	
		select * from memberinfo 
		
		<!-- where 태그안쪽의 조건절 사용 : 'where' 생략 가능-->
		<!-- concat : 문자열을 이어준다. -->
		<where>
			<if test = "searchType == 'id'">
			userID like concat('%', #{keyword},'%') 
			</if>

			<if test = "searchType == 'name'">
			userName like concat('%', #{keyword},'%') 
			</if>

			<if test = "searchType == 'both'">
			userID like concat('%', #{keyword},'%') or where userName like concat('%', #{keyword},'%')
			</if>
		</where>
		
	</select>
	
	
	
</mapper>
